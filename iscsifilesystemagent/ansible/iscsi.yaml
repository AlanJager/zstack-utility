---

- hosts: "{{host}}"
  vars:
    - virtenv_path: "{{zstack_root}}/virtualenv/iscsi/"
    - iscsi_root: "{{zstack_root}}/iscsi"
    - file_root: "files/iscsi"
    - pip_url: "{{pypi_url|default('https://pypi.python.org/simple/')}}"
    - proxy: "{{http_proxy|default()}}"
    - sproxy: "{{https_proxy|default()}}"

  tasks:
    - include: zstacklib.yaml

    - name: state epel.repo
      stat: path=/etc/yum.repos.d/epel.repo
      register: epel_repo

    - name: install epel-release yum repo
      when: ansible_os_family == 'RedHat' and epel_repo.stat.exists != true
      copy: src=files/iscsi/epel-release-source.repo
            dest=/etc/yum.repos.d/
            owner=root group=root mode=0644

    - name: install epel-release
      when: ansible_os_family == 'RedHat' and epel_repo.stat.exists != true
      yum: name=epel-release
           enablerepo=epel-release-source
           state=present

    - name: enable epel repository
      when: ansible_os_family == 'RedHat'
      ini_file: dest=/etc/yum.repos.d/epel.repo
                section=epel
                option=enabled
                value=1

    - name: create root directories
      shell: "mkdir -p {{item}}"
      with_items:
        - "{{iscsi_root}}"
        - "{{virtenv_path}}"

    - name: install isci related packages on RedHat based OS
      when: ansible_os_family == 'RedHat'
      yum: name="{{item}}"
      with_items:
        - scsi-target-utils
        - wget
        - qemu-img

    - name: install isci related packages on Debian based OS
      when: ansible_os_family == 'Debian'
      apt: pkg="{{item}}"
      with_items:
        - iscsitarget
        - iscsitarget-dkms
        - tgt
        - wget
        - qemu-utils

    - name: RHEL7 specific packages
      when: ansible_os_family == 'RedHat' and ansible_distribution_version >= '7'
      yum: name="{{item}}"
      with_items:
        - iptables-services

    - name: disable firewalld in RHEL7 and Centos7
      when: ansible_os_family == 'RedHat' and ansible_distribution_version >= '7'
      service: name=firewalld state=stopped enabled=no

    - name: disable selinux on RedHat based OS
      when: ansible_os_family == 'RedHat'
      selinux: state=permissive policy=targeted

    - name: enable tgtd daemon on RedHat
      service: name=tgtd state=started enabled=yes
      when: ansible_os_family == 'RedHat'

    - name: enable tgtd daemon on Debian
      service: name=iscsitarget state=started enabled=yes
      when: ansible_os_family == 'Debian'

    - shell: pip --version | grep 7.0.3
      register: pip_ret
      ignore_errors: True

    - name: copy pip 7.0.3
      copy: src="files/pip-7.0.3.tar.gz" dest="{{zstack_root}}/pip-7.0.3.tar.gz"
      when: pip_ret.rc != 0

    - name: install pip 7.0.3
      pip: name="{{zstack_root}}/pip-7.0.3.tar.gz" extra_args="--ignore-installed"
      when: pip_ret.rc != 0

    - shell: virtualenv --version | grep "12.1.1"
      register: virtualenv_ret
      ignore_errors: True

    - name: install virtualenv
      pip: name=virtualenv version=12.1.1 extra_args="--ignore-installed --trusted-host {{trusted_host}} -i {{pip_url}}"
      when: virtualenv_ret.rc != 0

    - name: create virtualenv
      shell: "rm -rf {{virtenv_path}} && virtualenv {{virtenv_path}}"

    - name: copy zstacklib
      copy: src="files/zstacklib/{{pkg_zstacklib}}" dest="{{iscsi_root}}/{{pkg_zstacklib}}"
      notify:
        - install zstacklib
        - restart iscsiagent

    - name: copy iscsi filesystem agent
      copy: src="{{file_root}}/{{pkg_iscsiagent}}" dest="{{iscsi_root}}/{{pkg_iscsiagent}}"
      notify:
        - install iscsiagent
        - restart iscsiagent

    - name: copy isci service file
      when: ansible_os_family == 'RedHat' or ansible_os_family == 'Debian'
      copy: src=files/iscsi/zstack-iscsi dest=/etc/init.d/ mode=755
      notify:
        - restart iscsiagent

    - meta: flush_handlers

    - name: enable iscsiagent service
      service: name=zstack-iscsi enabled=yes state=started

  handlers:
    - name: install zstacklib
      environment:
        http_proxy: "{{proxy}}"
        https_proxy: "{{sproxy}}"
      pip: name="{{iscsi_root}}/{{pkg_zstacklib}}" extra_args="--ignore-installed --trusted-host {{trusted_host}} -i {{pip_url}}" virtualenv="{{virtenv_path}}"

    - name: install iscsiagent
      environment:
        http_proxy: "{{proxy}}"
        https_proxy: "{{sproxy}}"
      pip: name="{{iscsi_root}}/{{pkg_iscsiagent}}" extra_args="--ignore-installed --trusted-host {{trusted_host}} -i {{pip_url}}" virtualenv="{{virtenv_path}}"

    - name: restart iscsiagent
      service: name=zstack-iscsi state=restarted enabled=yes
