zstack_build_root=/usr/local/zstack/root/
#the git repository version for build
build_version=master
product.name=ZStack
#product.version=1.0.1
product.bin.name=zstack-installer
#bin.version=

#Do not use license config for zstack 
#license.file=

#build.num=
#build_war_flag=

zstack.source=${zstack_build_root}/zstack
zstack.build_version=${build_version}

zstackutility.source=${zstack_build_root}/zstack-utility
zstackutiltiy.build_version=${build_version}

apachetomcat.pkg=${zstack_build_root}/apache-tomcat-7.0.35.zip
zstackdashboard.source=${zstack_build_root}/zstack-dashboard
mevocoui.source=${zstack_build_root}/mevoco-ui
zstackdashboard.build_version=${build_version}

#zstackdashboard.source=${zstack_build_root}/zstack-ui
#zstackdashboard.build_version=master

zstacklib.source=${zstackutility.source}/zstacklib
zstackcli.source=${zstackutility.source}/zstackcli
zstackbuild.scripts=${zstackutility.source}/zstackbuild/scripts

apibinding.source=${zstackutility.source}/apibinding

kvmagent.source=${zstackutility.source}/kvmagent
kvmagent.serviceFile=${zstackutility.source}/kvmagent/zstack-kvmagent

sftpbackupstorage.source=${zstackutility.source}/sftpbackupstorage
sftpbackupstorage.serviceFile=${zstackutility.source}/sftpbackupstorage/zstack-sftpbackupstorage

appliancevm.source=${zstackutility.source}/appliancevm
appliancevm.serviceFile=${zstackutility.source}/appliancevm/zstack-appliancevm

virtualrouter.source=${zstackutility.source}/virtualrouter
virtualrouter.serviceFile=${zstackutility.source}/virtualrouter/zstack-virtualrouter

setting.source=${zstackutility.source}/setting
setting.serviceFile=${zstackutility.source}/setting/zstack-setting

zstackCommons.source=${zstackutility.source}/puppets/

#Woodpecker Packages
testagent.source=${zstack_build_root}/zstack-woodpecker/zstacktestagent
testagent.serviceFile=${zstack_build_root}/zstack-woodpecker/zstacktestagent/zstack-testagent

zstacktestproperties.source=${zstack_build_root}/zstack-woodpecker/conf

consoleproxy.source=${zstackutility.source}/consoleproxy
consoleproxy.serviceFile=${zstackutility.source}/consoleproxy/zstack-consoleproxy

zstackctl.source=${zstackutility.source}/zstackctl

iscsi.source=${zstackutility.source}/iscsifilesystemagent
iscsi.serviceFile=${zstackutility.source}/iscsifilesystemagent/zstack-iscsi

cephb.source=${zstackutility.source}/cephbackupstorage
cephb.serviceFile=${zstackutility.source}/cephbackupstorage/zstack-ceph-backupstorage

cephp.source=${zstackutility.source}/cephprimarystorage
cephp.serviceFile=${zstackutility.source}/cephprimarystorage/zstack-ceph-primarystorage

create.pypi.source=${zstackbuild.scripts}/create_pypi_source.sh
create.virtualenv=${zstackbuild.scripts}/create_virtualenv.sh
gen.product.title.script=${zstackbuild.scripts}/gen_installation_title.sh
offline.bin.gen.setup.script=${zstackutility.source}/zstackbuild/scripts/gen_setup.sh
offline.bin.setup.script=${zstackutility.source}/zstackbuild/scripts/setup.sh
build.installation.bin.script=${zstackutility.source}/zstackbuild/scripts/build_installation_bin.sh
pip2pi.requirements.file=${zstackutility.source}/zstackbuild/pypi_source/requirements.txt
pypi.source.folder=${zstackutility.source}/zstackbuild/pypi_source/pypi
centos6.repo.dir=${zstackutility.source}/zstackbuild/centos6_repo
centos7.repo.dir=${zstackutility.source}/zstackbuild/centos7_repo
centos6.unzip.rpm=${zstackutility.source}/zstackbuild/libs/unzip-6.0-2.el6_6.x86_64.rpm
centos7.unzip.rpm=${zstackutility.source}/zstackbuild/libs/unzip-6.0-15.el7.x86_64.rpm

agent.source=${zstack_build_root}/zstack-agent
agent.server.yaml=${agent.source}/target/package/server/agent.yaml
agent.server.bin=${agent.source}/target/zstack-agent.bin
agent.collectd.yaml=${agent.source}/target/package/collectd/collectd.yaml
agent.collectd.bin=${agent.source}/target/collectd.bin

cassandra.pkg=${zstack_build_root}/apache-cassandra-2.2.3-bin.tar.gz
kairosdb.pkg=${zstack_build_root}/kairosdb-1.1.1-1.tar.gz

build.zstack.war.script=${zstackbuild.scripts}/build_zstack_war.sh
build.premium.war.script=${zstackbuild.scripts}/build_premium_war.sh
